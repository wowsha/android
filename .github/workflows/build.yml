name: Build Android 5 AOSP 64-bit ISO 

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-aosp:
    runs-on: ubuntu-latest
    timeout-minutes: 480

    env:
      TMP_DRIVE_SIZE_GB: 100
      TMP_DRIVE_IMG: /tmp/tmpdrive.img
      TMP_DRIVE_MOUNT: /tmp/tmpdrive
      OUT_DIR: /tmp/tmpdrive/out

    steps:
    - name: Prepare 100GB loop-mounted tmp drive
      run: |
        sudo mkdir -p $TMP_DRIVE_MOUNT
        sudo fallocate -l ${TMP_DRIVE_SIZE_GB}G $TMP_DRIVE_IMG
        sudo mkfs.ext4 $TMP_DRIVE_IMG
        sudo mount -o loop $TMP_DRIVE_IMG $TMP_DRIVE_MOUNT
        sudo chmod 777 $TMP_DRIVE_MOUNT
        df -h $TMP_DRIVE_MOUNT

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-7-jdk repo bc bison build-essential curl \
          flex g++-multilib gcc-multilib git gnupg gperf lib32ncurses5-dev \
          lib32z1-dev libgl1-mesa-dev libxml2-utils lzop pngcrush schedtool \
          squashfs-tools xsltproc zip zlib1g-dev isolinux syslinux-utils

    - name: Setup repo tool
      run: |
        curl https://storage.googleapis.com/git-repo-downloads/repo > repo
        chmod a+x repo
        sudo mv repo /usr/local/bin/

    - name: Initialize AOSP repo (Android 5.1.1 - Lollipop)
      run: |
        cd $TMP_DRIVE_MOUNT
        repo init -u https://android.googlesource.com/platform/manifest -b android-5.1.1_r38

    - name: Sync repo (this may take a long time)
      run: |
        cd $TMP_DRIVE_MOUNT
        repo sync -j$(nproc)

    - name: Setup build environment and build
      run: |
        cd $TMP_DRIVE_MOUNT
        source build/envsetup.sh
        lunch aosp_arm64-eng
        make -j$(nproc)

    - name: Create bootable ISO from images
      run: |
        cd $TMP_DRIVE_MOUNT
        mkdir -p iso_root/isolinux
        cp /usr/lib/ISOLINUX/isolinux.bin iso_root/isolinux/
        cp /usr/lib/syslinux/modules/bios/ldlinux.c32 iso_root/isolinux/

        # Copy Android boot/system images - adjust path if needed
        cp out/target/product/generic_arm64/boot.img iso_root/
        cp out/target/product/generic_arm64/system.img iso_root/

        # Create isolinux.cfg to boot Android images
        cat > iso_root/isolinux/isolinux.cfg <<EOF
UI ldlinux.c32
LABEL android
  KERNEL boot.img
  APPEND initrd=system.img
EOF

        mkisofs -o android5_arm64.iso \
          -b isolinux/isolinux.bin \
          -c isolinux/boot.cat \
          -no-emul-boot -boot-load-size 4 -boot-info-table \
          -J -R iso_root

    - name: Upload ISO artifact
      uses: actions/upload-artifact@v3
      with:
        name: android5_arm64.iso
        path: $TMP_DRIVE_MOUNT/android5_arm64.iso

    - name: Cleanup tmp drive
      if: always()
      run: |
        sudo umount $TMP_DRIVE_MOUNT
        sudo rm $TMP_DRIVE_IMG
